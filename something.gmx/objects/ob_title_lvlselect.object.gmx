<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_lvlselect</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

option = 0
max_option = 10

_x[0] = 50
_x[1] = 250

_y[0] = 200
_y[1] = 200 + 30
_y[2] = 200 + 60
_y[3] = 200 + 90
_y[4] = 200 + 120
_y[5] = 200 + 150
_y[6] = 200 + 180
_y[7] = 200 + 210
_y[8] = 200 + 240
_y[9] = 200 + 270
_y[10] = 200 + 300



txt[0] = "Level One"
txt[1] = "Level Two"
txt[2] = "Level Three"
txt[3] = "Level Four"
txt[4] = "Level Five"
txt[5] = "Level Six"
txt[6] = "Level Seven"
txt[7] = "Level Eight"
txt[8] = "Level Nine"
txt[9] = "Level Ten"
txt[10] = "Level Eleven"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving around the level select screen

//if the down arrow is pressed add one to the option variable
if keyboard_check_pressed(vk_down){
    option += 1
    
}

//if the up arrow is pressed subtract one from the option variable
else if keyboard_check_pressed(vk_up){
    option -= 1
}

// if you are at the top of the list and press up the the arrow goes to the bottom
if option &lt; 0 {
    option = max_option
}
//if you are at the bottom of the list then press down go tot the top
if option &gt; max_option {
    option = 0
}

//If you press enter check what option are you on and go to said room
if (keyboard_check_pressed(vk_enter)){
    if (option == 0){
        room_goto(lvl_1_p1)
    }
    else if (option == 1){
        room_goto(lvl_2_p1)
    }
    else if (option == 2){
        room_goto(lvl_3_p1)
    }
    else if (option == 3){
        room_goto(lvl_4_p1)
    }
    else if (option == 4){
        room_goto(lvl_5_p1)
    }
    else if (option == 5){
        room_goto(lvl_6_p1)
    }
    else if (option == 6){
        room_goto(lvl_7_p1)
    }
    else if (option == 7){
        room_goto(lvl_8_p1)
    }
    else if (option == 8){
        room_goto(lvl_9_p1)
    }
    else if (option == 9){
        room_goto(lvl_10_p1)
    }
    else if (option == 10){
        room_goto(lvl_11_p1)    
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW STUFF
draw_self()

var i
i = 0
var t
t = 0 
var q
q = 0

i = option

if (option &gt;= 8){
    t = 1
    i = option - 8
}

//draw arrow
draw_sprite(sp_arrow,0,_x[t] - 3, _y[i])

//draw text
draw_set_font(fn_titlescreen)
draw_set_valign(fa_middle)

i = 0
t = 0

while (q &lt;= max_option){
    draw_text(_x[t],_y[i],txt[q])
    i += 1
    q += 1
    if (i == 8){
        i = 0
        t = 1
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
